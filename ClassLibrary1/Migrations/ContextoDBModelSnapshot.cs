// <auto-generated />
using System;
using ClassLibrary1.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(ContextoDB))]
    partial class ContextoDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ClassLibrary1.Models.Cartao", b =>
                {
                    b.Property<int>("NumeroCartao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<decimal>("Anuidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Emissor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTitular")
                        .HasColumnType("int");

                    b.Property<decimal>("Plafond")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("NumeroCartao");

                    b.HasIndex("IdTitular");

                    b.ToTable("Cartoes");

                    b.HasData(
                        new
                        {
                            NumeroCartao = 1234,
                            Anuidade = 20m,
                            DataEmissao = new DateTime(2020, 11, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Emissor = "Visa",
                            IdTitular = 1,
                            Plafond = 1000m,
                            Validade = new DateTime(2022, 11, 14, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Conta", b =>
                {
                    b.Property<int>("Numero")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRegisto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gerente")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Numero");

                    b.ToTable("Contas");

                    b.HasData(
                        new
                        {
                            Numero = 1,
                            Agencia = "Lisboa",
                            DataRegisto = new DateTime(2020, 11, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            Gerente = "José Luiz"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Movimento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroConta")
                        .HasColumnType("int");

                    b.Property<string>("TipoMovimento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("NumeroConta");

                    b.ToTable("Movimentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateTime(2020, 11, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            NumeroConta = 1,
                            TipoMovimento = "Levantamento MB",
                            Valor = 20m
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataFinalizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataRegisto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataFinalizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataRegisto = new DateTime(2020, 11, 17, 18, 35, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Cartão de débito",
                            Preco = 5m
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipoConta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdTitular")
                        .HasColumnType("int");

                    b.Property<int>("NumeroConta")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdTitular");

                    b.HasIndex("NumeroConta");

                    b.ToTable("TiposConta");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipoProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("IdProduto")
                        .HasColumnType("int");

                    b.Property<int>("IdTitular")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdProduto");

                    b.HasIndex("IdTitular");

                    b.ToTable("TiposProduto");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Titular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CartaoCidadao")
                        .HasColumnType("int");

                    b.Property<int>("Contribuinte")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Morada")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Titulares");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CartaoCidadao = 123456,
                            Contribuinte = 222222777,
                            DataNascimento = new DateTime(1980, 2, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Morada = "Rua ABC, 17 - Lisboa",
                            Nome = "Fernando Soares"
                        });
                });

            modelBuilder.Entity("ClassLibrary1.Models.Cartao", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Titular", "Titular")
                        .WithMany("Cartoes")
                        .HasForeignKey("IdTitular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Movimento", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Conta", "Conta")
                        .WithMany("Movimento")
                        .HasForeignKey("NumeroConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipoConta", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Titular", "Titular")
                        .WithMany("TiposConta")
                        .HasForeignKey("IdTitular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Models.Conta", "Conta")
                        .WithMany("TiposConta")
                        .HasForeignKey("NumeroConta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conta");

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("ClassLibrary1.Models.TipoProduto", b =>
                {
                    b.HasOne("ClassLibrary1.Models.Produto", "Produto")
                        .WithMany("TiposProduto")
                        .HasForeignKey("IdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClassLibrary1.Models.Titular", "Titular")
                        .WithMany("TiposProduto")
                        .HasForeignKey("IdTitular")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");

                    b.Navigation("Titular");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Conta", b =>
                {
                    b.Navigation("Movimento");

                    b.Navigation("TiposConta");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Produto", b =>
                {
                    b.Navigation("TiposProduto");
                });

            modelBuilder.Entity("ClassLibrary1.Models.Titular", b =>
                {
                    b.Navigation("Cartoes");

                    b.Navigation("TiposConta");

                    b.Navigation("TiposProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
